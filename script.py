from pathlib import Path
from subprocess import run, CalledProcessError
from random import randrange
from time import sleep
import sys
import os
import platform

# –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç
BASE_DIR = Path(__file__).resolve().parent
COUNTER_FILE = BASE_DIR / "every_day.py"

def print_commit(number):
    border = '*' * 30
    return [border, f"*{'–í—Å–µ–≥–æ –∫–æ–º–º–∏—Ç–æ–≤':^28}*", f"*{str(number):^28}*", border]

def safe_git(*args):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç git-–∫–æ–º–∞–Ω–¥—É –∏ —Å–æ–æ–±—â–∞–µ—Ç –æ–± –æ—à–∏–±–∫–∞—Ö."""
    try:
        result = run(["git", *args], cwd=BASE_DIR, check=True,
                     capture_output=True, text=True)
        return result.stdout.strip()
    except CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ git {' '.join(args)}:\n{e.stderr}")
        sys.exit(1)

def clear_screen():
    """–û—á–∏—â–∞–µ—Ç —ç–∫—Ä–∞–Ω —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ –¥–ª—è –ª—é–±–æ–π –û–°"""
    if platform.system() == "Windows":
        os.system("cls")
    else:
        os.system("clear")

def check():
    clear_screen()  # –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –≤–Ω—É—Ç—Ä–∏ –ª–∏ –º—ã git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    try:
        run(["git", "rev-parse", "--is-inside-work-tree"],
            cwd=BASE_DIR, check=True, capture_output=True)
    except CalledProcessError:
        print("‚ùå –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ —è–≤–ª—è–µ—Ç—Å—è git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º.")
        sys.exit(1)

    # –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç ‚Äî —Å–æ–∑–¥–∞–µ–º —Å 1
    if not COUNTER_FILE.exists():
        COUNTER_FILE.write_text("# 1")

    # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    current = int(COUNTER_FILE.read_text().split()[1])
    print(*print_commit(current), sep='\n')

    commits_to_make = randrange(3, 16)
    print(f"üîÅ –ö–æ–º–º–∏—Ç–æ–≤ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: {commits_to_make}")

    for _ in range(commits_to_make):
        current += 1
        COUNTER_FILE.write_text(f"# {current}")

        # Git –∫–æ–º–∞–Ω–¥—ã
        safe_git("add", str(COUNTER_FILE.relative_to(BASE_DIR)))
        safe_git("commit", "-m", f"{current}")
        safe_git("push", "origin", "main")
        print(f"‚úÖ –ö–æ–º–º–∏—Ç ‚Ññ{current} —Å–¥–µ–ª–∞–Ω")

    print(*print_commit(current), sep='\n')

if __name__ == "__main__":
    print("üì• –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å origin/main...")
    safe_git("pull", "origin", "main")
    sleep(2)
    check()